// Copyright 2021 The KCL Authors. All rights reserved.
//
// This file defines the request parameters and return structure of the KCLVM RPC server.
// We can use the following command to start a KCLVM RPC server.
//
// ```
// kclvm -m kclvm.program.rpc-server -http=:2021
// ```
//
// The service can then be requested via the POST protocol:
//
// ```
// $ curl -X POST http://127.0.0.1:2021/api:protorpc/BuiltinService.Ping --data '{}'
// {
//    "error": "",
//    "result": {}
// }
// ```

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: gpyrpc/gpyrpc.proto

package gpyrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// kcl main.k -D name=value
type CmdArgSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // TODO: any?
}

func (x *CmdArgSpec) Reset() {
	*x = CmdArgSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdArgSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdArgSpec) ProtoMessage() {}

func (x *CmdArgSpec) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdArgSpec.ProtoReflect.Descriptor instead.
func (*CmdArgSpec) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{0}
}

func (x *CmdArgSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CmdArgSpec) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// kcl main.k -O pkgpath:path.to.field=field_value
type CmdOverrideSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkgpath    string `protobuf:"bytes,1,opt,name=pkgpath,proto3" json:"pkgpath,omitempty"`
	FieldPath  string `protobuf:"bytes,2,opt,name=field_path,json=fieldPath,proto3" json:"field_path,omitempty"`
	FieldValue string `protobuf:"bytes,3,opt,name=field_value,json=fieldValue,proto3" json:"field_value,omitempty"`
	Action     string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CmdOverrideSpec) Reset() {
	*x = CmdOverrideSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdOverrideSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdOverrideSpec) ProtoMessage() {}

func (x *CmdOverrideSpec) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdOverrideSpec.ProtoReflect.Descriptor instead.
func (*CmdOverrideSpec) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{1}
}

func (x *CmdOverrideSpec) GetPkgpath() string {
	if x != nil {
		return x.Pkgpath
	}
	return ""
}

func (x *CmdOverrideSpec) GetFieldPath() string {
	if x != nil {
		return x.FieldPath
	}
	return ""
}

func (x *CmdOverrideSpec) GetFieldValue() string {
	if x != nil {
		return x.FieldValue
	}
	return ""
}

func (x *CmdOverrideSpec) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *anypb.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  string     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	KclErr *KclError  `protobuf:"bytes,3,opt,name=kcl_err,json=kclErr,proto3" json:"kcl_err,omitempty"`
}

func (x *RestResponse) Reset() {
	*x = RestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestResponse) ProtoMessage() {}

func (x *RestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestResponse.ProtoReflect.Descriptor instead.
func (*RestResponse) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{2}
}

func (x *RestResponse) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RestResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RestResponse) GetKclErr() *KclError {
	if x != nil {
		return x.KclErr
	}
	return nil
}

type KclError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ewcode     string          `protobuf:"bytes,1,opt,name=ewcode,proto3" json:"ewcode,omitempty"` // See kclvm/kcl/error/kcl_err_msg.py
	Name       string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Msg        string          `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	ErrorInfos []*KclErrorInfo `protobuf:"bytes,4,rep,name=error_infos,json=errorInfos,proto3" json:"error_infos,omitempty"`
}

func (x *KclError) Reset() {
	*x = KclError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KclError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KclError) ProtoMessage() {}

func (x *KclError) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KclError.ProtoReflect.Descriptor instead.
func (*KclError) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{3}
}

func (x *KclError) GetEwcode() string {
	if x != nil {
		return x.Ewcode
	}
	return ""
}

func (x *KclError) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KclError) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *KclError) GetErrorInfos() []*KclErrorInfo {
	if x != nil {
		return x.ErrorInfos
	}
	return nil
}

type KclErrorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrLevel string `protobuf:"bytes,1,opt,name=err_level,json=errLevel,proto3" json:"err_level,omitempty"`
	ArgMsg   string `protobuf:"bytes,2,opt,name=arg_msg,json=argMsg,proto3" json:"arg_msg,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	SrcCode  string `protobuf:"bytes,4,opt,name=src_code,json=srcCode,proto3" json:"src_code,omitempty"`
	LineNo   string `protobuf:"bytes,5,opt,name=line_no,json=lineNo,proto3" json:"line_no,omitempty"`
	ColNo    string `protobuf:"bytes,6,opt,name=col_no,json=colNo,proto3" json:"col_no,omitempty"`
}

func (x *KclErrorInfo) Reset() {
	*x = KclErrorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KclErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KclErrorInfo) ProtoMessage() {}

func (x *KclErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KclErrorInfo.ProtoReflect.Descriptor instead.
func (*KclErrorInfo) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{4}
}

func (x *KclErrorInfo) GetErrLevel() string {
	if x != nil {
		return x.ErrLevel
	}
	return ""
}

func (x *KclErrorInfo) GetArgMsg() string {
	if x != nil {
		return x.ArgMsg
	}
	return ""
}

func (x *KclErrorInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *KclErrorInfo) GetSrcCode() string {
	if x != nil {
		return x.SrcCode
	}
	return ""
}

func (x *KclErrorInfo) GetLineNo() string {
	if x != nil {
		return x.LineNo
	}
	return ""
}

func (x *KclErrorInfo) GetColNo() string {
	if x != nil {
		return x.ColNo
	}
	return ""
}

type Ping_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Ping_Args) Reset() {
	*x = Ping_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping_Args) ProtoMessage() {}

func (x *Ping_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping_Args.ProtoReflect.Descriptor instead.
func (*Ping_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{5}
}

func (x *Ping_Args) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Ping_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Ping_Result) Reset() {
	*x = Ping_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping_Result) ProtoMessage() {}

func (x *Ping_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping_Result.ProtoReflect.Descriptor instead.
func (*Ping_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{6}
}

func (x *Ping_Result) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ListMethod_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMethod_Args) Reset() {
	*x = ListMethod_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMethod_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMethod_Args) ProtoMessage() {}

func (x *ListMethod_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMethod_Args.ProtoReflect.Descriptor instead.
func (*ListMethod_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{7}
}

type ListMethod_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodNameList []string `protobuf:"bytes,1,rep,name=method_name_list,json=methodNameList,proto3" json:"method_name_list,omitempty"`
}

func (x *ListMethod_Result) Reset() {
	*x = ListMethod_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMethod_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMethod_Result) ProtoMessage() {}

func (x *ListMethod_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMethod_Result.ProtoReflect.Descriptor instead.
func (*ListMethod_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{8}
}

func (x *ListMethod_Result) GetMethodNameList() []string {
	if x != nil {
		return x.MethodNameList
	}
	return nil
}

type ParseFile_LarkTree_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename       string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	SourceCode     string `protobuf:"bytes,2,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"`
	IgnoreFileLine bool   `protobuf:"varint,3,opt,name=ignore_file_line,json=ignoreFileLine,proto3" json:"ignore_file_line,omitempty"`
}

func (x *ParseFile_LarkTree_Args) Reset() {
	*x = ParseFile_LarkTree_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFile_LarkTree_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFile_LarkTree_Args) ProtoMessage() {}

func (x *ParseFile_LarkTree_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFile_LarkTree_Args.ProtoReflect.Descriptor instead.
func (*ParseFile_LarkTree_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{9}
}

func (x *ParseFile_LarkTree_Args) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ParseFile_LarkTree_Args) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

func (x *ParseFile_LarkTree_Args) GetIgnoreFileLine() bool {
	if x != nil {
		return x.IgnoreFileLine
	}
	return false
}

type ParseFile_LarkTree_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LarkTreeJson string `protobuf:"bytes,1,opt,name=lark_tree_json,json=larkTreeJson,proto3" json:"lark_tree_json,omitempty"`
}

func (x *ParseFile_LarkTree_Result) Reset() {
	*x = ParseFile_LarkTree_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFile_LarkTree_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFile_LarkTree_Result) ProtoMessage() {}

func (x *ParseFile_LarkTree_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFile_LarkTree_Result.ProtoReflect.Descriptor instead.
func (*ParseFile_LarkTree_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{10}
}

func (x *ParseFile_LarkTree_Result) GetLarkTreeJson() string {
	if x != nil {
		return x.LarkTreeJson
	}
	return ""
}

type ParseFile_AST_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	SourceCode string `protobuf:"bytes,2,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"`
}

func (x *ParseFile_AST_Args) Reset() {
	*x = ParseFile_AST_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFile_AST_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFile_AST_Args) ProtoMessage() {}

func (x *ParseFile_AST_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFile_AST_Args.ProtoReflect.Descriptor instead.
func (*ParseFile_AST_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{11}
}

func (x *ParseFile_AST_Args) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ParseFile_AST_Args) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

type ParseFile_AST_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AstJson string `protobuf:"bytes,1,opt,name=ast_json,json=astJson,proto3" json:"ast_json,omitempty"` // json value
}

func (x *ParseFile_AST_Result) Reset() {
	*x = ParseFile_AST_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFile_AST_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFile_AST_Result) ProtoMessage() {}

func (x *ParseFile_AST_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFile_AST_Result.ProtoReflect.Descriptor instead.
func (*ParseFile_AST_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{12}
}

func (x *ParseFile_AST_Result) GetAstJson() string {
	if x != nil {
		return x.AstJson
	}
	return ""
}

type ParseProgram_AST_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KFilenameList []string `protobuf:"bytes,1,rep,name=k_filename_list,json=kFilenameList,proto3" json:"k_filename_list,omitempty"`
}

func (x *ParseProgram_AST_Args) Reset() {
	*x = ParseProgram_AST_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseProgram_AST_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseProgram_AST_Args) ProtoMessage() {}

func (x *ParseProgram_AST_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseProgram_AST_Args.ProtoReflect.Descriptor instead.
func (*ParseProgram_AST_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{13}
}

func (x *ParseProgram_AST_Args) GetKFilenameList() []string {
	if x != nil {
		return x.KFilenameList
	}
	return nil
}

type ParseProgram_AST_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AstJson string `protobuf:"bytes,1,opt,name=ast_json,json=astJson,proto3" json:"ast_json,omitempty"` // json value
}

func (x *ParseProgram_AST_Result) Reset() {
	*x = ParseProgram_AST_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseProgram_AST_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseProgram_AST_Result) ProtoMessage() {}

func (x *ParseProgram_AST_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseProgram_AST_Result.ProtoReflect.Descriptor instead.
func (*ParseProgram_AST_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{14}
}

func (x *ParseProgram_AST_Result) GetAstJson() string {
	if x != nil {
		return x.AstJson
	}
	return ""
}

type ExecProgram_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkDir           string             `protobuf:"bytes,1,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	KFilenameList     []string           `protobuf:"bytes,2,rep,name=k_filename_list,json=kFilenameList,proto3" json:"k_filename_list,omitempty"`
	KCodeList         []string           `protobuf:"bytes,3,rep,name=k_code_list,json=kCodeList,proto3" json:"k_code_list,omitempty"`
	Args              []*CmdArgSpec      `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Overrides         []*CmdOverrideSpec `protobuf:"bytes,5,rep,name=overrides,proto3" json:"overrides,omitempty"`
	DisableYamlResult bool               `protobuf:"varint,6,opt,name=disable_yaml_result,json=disableYamlResult,proto3" json:"disable_yaml_result,omitempty"`
	PrintOverrideAst  bool               `protobuf:"varint,7,opt,name=print_override_ast,json=printOverrideAst,proto3" json:"print_override_ast,omitempty"`
	// -r --strict-range-check
	StrictRangeCheck bool `protobuf:"varint,8,opt,name=strict_range_check,json=strictRangeCheck,proto3" json:"strict_range_check,omitempty"`
	// -n --disable-none
	DisableNone bool `protobuf:"varint,9,opt,name=disable_none,json=disableNone,proto3" json:"disable_none,omitempty"`
	// -v --verbose
	Verbose int32 `protobuf:"varint,10,opt,name=verbose,proto3" json:"verbose,omitempty"`
	// -d --debug
	Debug int32 `protobuf:"varint,11,opt,name=debug,proto3" json:"debug,omitempty"`
	// yaml/json: sort keys
	SortKeys bool `protobuf:"varint,12,opt,name=sort_keys,json=sortKeys,proto3" json:"sort_keys,omitempty"`
	// include schema type path in JSON/YAML result
	IncludeSchemaTypePath bool `protobuf:"varint,13,opt,name=include_schema_type_path,json=includeSchemaTypePath,proto3" json:"include_schema_type_path,omitempty"`
}

func (x *ExecProgram_Args) Reset() {
	*x = ExecProgram_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecProgram_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProgram_Args) ProtoMessage() {}

func (x *ExecProgram_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProgram_Args.ProtoReflect.Descriptor instead.
func (*ExecProgram_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{15}
}

func (x *ExecProgram_Args) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *ExecProgram_Args) GetKFilenameList() []string {
	if x != nil {
		return x.KFilenameList
	}
	return nil
}

func (x *ExecProgram_Args) GetKCodeList() []string {
	if x != nil {
		return x.KCodeList
	}
	return nil
}

func (x *ExecProgram_Args) GetArgs() []*CmdArgSpec {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecProgram_Args) GetOverrides() []*CmdOverrideSpec {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *ExecProgram_Args) GetDisableYamlResult() bool {
	if x != nil {
		return x.DisableYamlResult
	}
	return false
}

func (x *ExecProgram_Args) GetPrintOverrideAst() bool {
	if x != nil {
		return x.PrintOverrideAst
	}
	return false
}

func (x *ExecProgram_Args) GetStrictRangeCheck() bool {
	if x != nil {
		return x.StrictRangeCheck
	}
	return false
}

func (x *ExecProgram_Args) GetDisableNone() bool {
	if x != nil {
		return x.DisableNone
	}
	return false
}

func (x *ExecProgram_Args) GetVerbose() int32 {
	if x != nil {
		return x.Verbose
	}
	return 0
}

func (x *ExecProgram_Args) GetDebug() int32 {
	if x != nil {
		return x.Debug
	}
	return 0
}

func (x *ExecProgram_Args) GetSortKeys() bool {
	if x != nil {
		return x.SortKeys
	}
	return false
}

func (x *ExecProgram_Args) GetIncludeSchemaTypePath() bool {
	if x != nil {
		return x.IncludeSchemaTypePath
	}
	return false
}

type ExecProgram_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonResult  string `protobuf:"bytes,1,opt,name=json_result,json=jsonResult,proto3" json:"json_result,omitempty"`
	YamlResult  string `protobuf:"bytes,2,opt,name=yaml_result,json=yamlResult,proto3" json:"yaml_result,omitempty"`
	EscapedTime string `protobuf:"bytes,101,opt,name=escaped_time,json=escapedTime,proto3" json:"escaped_time,omitempty"`
}

func (x *ExecProgram_Result) Reset() {
	*x = ExecProgram_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecProgram_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProgram_Result) ProtoMessage() {}

func (x *ExecProgram_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProgram_Result.ProtoReflect.Descriptor instead.
func (*ExecProgram_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{16}
}

func (x *ExecProgram_Result) GetJsonResult() string {
	if x != nil {
		return x.JsonResult
	}
	return ""
}

func (x *ExecProgram_Result) GetYamlResult() string {
	if x != nil {
		return x.YamlResult
	}
	return ""
}

func (x *ExecProgram_Result) GetEscapedTime() string {
	if x != nil {
		return x.EscapedTime
	}
	return ""
}

type ResetPlugin_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginRoot string `protobuf:"bytes,1,opt,name=plugin_root,json=pluginRoot,proto3" json:"plugin_root,omitempty"`
}

func (x *ResetPlugin_Args) Reset() {
	*x = ResetPlugin_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPlugin_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPlugin_Args) ProtoMessage() {}

func (x *ResetPlugin_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPlugin_Args.ProtoReflect.Descriptor instead.
func (*ResetPlugin_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{17}
}

func (x *ResetPlugin_Args) GetPluginRoot() string {
	if x != nil {
		return x.PluginRoot
	}
	return ""
}

type ResetPlugin_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPlugin_Result) Reset() {
	*x = ResetPlugin_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPlugin_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPlugin_Result) ProtoMessage() {}

func (x *ResetPlugin_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPlugin_Result.ProtoReflect.Descriptor instead.
func (*ResetPlugin_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{18}
}

type FormatCode_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *FormatCode_Args) Reset() {
	*x = FormatCode_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatCode_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatCode_Args) ProtoMessage() {}

func (x *FormatCode_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatCode_Args.ProtoReflect.Descriptor instead.
func (*FormatCode_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{19}
}

func (x *FormatCode_Args) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type FormatCode_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Formatted []byte `protobuf:"bytes,1,opt,name=formatted,proto3" json:"formatted,omitempty"`
}

func (x *FormatCode_Result) Reset() {
	*x = FormatCode_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatCode_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatCode_Result) ProtoMessage() {}

func (x *FormatCode_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatCode_Result.ProtoReflect.Descriptor instead.
func (*FormatCode_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{20}
}

func (x *FormatCode_Result) GetFormatted() []byte {
	if x != nil {
		return x.Formatted
	}
	return nil
}

type FormatPath_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FormatPath_Args) Reset() {
	*x = FormatPath_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatPath_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatPath_Args) ProtoMessage() {}

func (x *FormatPath_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatPath_Args.ProtoReflect.Descriptor instead.
func (*FormatPath_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{21}
}

func (x *FormatPath_Args) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FormatPath_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangedPaths []string `protobuf:"bytes,1,rep,name=changedPaths,proto3" json:"changedPaths,omitempty"`
}

func (x *FormatPath_Result) Reset() {
	*x = FormatPath_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatPath_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatPath_Result) ProtoMessage() {}

func (x *FormatPath_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatPath_Result.ProtoReflect.Descriptor instead.
func (*FormatPath_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{22}
}

func (x *FormatPath_Result) GetChangedPaths() []string {
	if x != nil {
		return x.ChangedPaths
	}
	return nil
}

type LintPath_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *LintPath_Args) Reset() {
	*x = LintPath_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LintPath_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintPath_Args) ProtoMessage() {}

func (x *LintPath_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintPath_Args.ProtoReflect.Descriptor instead.
func (*LintPath_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{23}
}

func (x *LintPath_Args) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type LintPath_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []string `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *LintPath_Result) Reset() {
	*x = LintPath_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LintPath_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintPath_Result) ProtoMessage() {}

func (x *LintPath_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintPath_Result.ProtoReflect.Descriptor instead.
func (*LintPath_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{24}
}

func (x *LintPath_Result) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

type OverrideFile_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File        string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Specs       []string `protobuf:"bytes,2,rep,name=specs,proto3" json:"specs,omitempty"`
	ImportPaths []string `protobuf:"bytes,3,rep,name=import_paths,json=importPaths,proto3" json:"import_paths,omitempty"`
}

func (x *OverrideFile_Args) Reset() {
	*x = OverrideFile_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideFile_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideFile_Args) ProtoMessage() {}

func (x *OverrideFile_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideFile_Args.ProtoReflect.Descriptor instead.
func (*OverrideFile_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{25}
}

func (x *OverrideFile_Args) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *OverrideFile_Args) GetSpecs() []string {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *OverrideFile_Args) GetImportPaths() []string {
	if x != nil {
		return x.ImportPaths
	}
	return nil
}

type OverrideFile_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *OverrideFile_Result) Reset() {
	*x = OverrideFile_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideFile_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideFile_Result) ProtoMessage() {}

func (x *OverrideFile_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideFile_Result.ProtoReflect.Descriptor instead.
func (*OverrideFile_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{26}
}

func (x *OverrideFile_Result) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type EvalCode_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *EvalCode_Args) Reset() {
	*x = EvalCode_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvalCode_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalCode_Args) ProtoMessage() {}

func (x *EvalCode_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalCode_Args.ProtoReflect.Descriptor instead.
func (*EvalCode_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{27}
}

func (x *EvalCode_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type EvalCode_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonResult string `protobuf:"bytes,2,opt,name=json_result,json=jsonResult,proto3" json:"json_result,omitempty"`
}

func (x *EvalCode_Result) Reset() {
	*x = EvalCode_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvalCode_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalCode_Result) ProtoMessage() {}

func (x *EvalCode_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalCode_Result.ProtoReflect.Descriptor instead.
func (*EvalCode_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{28}
}

func (x *EvalCode_Result) GetJsonResult() string {
	if x != nil {
		return x.JsonResult
	}
	return ""
}

type ResolveCode_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ResolveCode_Args) Reset() {
	*x = ResolveCode_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveCode_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveCode_Args) ProtoMessage() {}

func (x *ResolveCode_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveCode_Args.ProtoReflect.Descriptor instead.
func (*ResolveCode_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{29}
}

func (x *ResolveCode_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ResolveCode_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResolveCode_Result) Reset() {
	*x = ResolveCode_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveCode_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveCode_Result) ProtoMessage() {}

func (x *ResolveCode_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveCode_Result.ProtoReflect.Descriptor instead.
func (*ResolveCode_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{30}
}

func (x *ResolveCode_Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetSchemaType_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File       string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Code       string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	SchemaName string `protobuf:"bytes,3,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"` // emtry is all
}

func (x *GetSchemaType_Args) Reset() {
	*x = GetSchemaType_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaType_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaType_Args) ProtoMessage() {}

func (x *GetSchemaType_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaType_Args.ProtoReflect.Descriptor instead.
func (*GetSchemaType_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{31}
}

func (x *GetSchemaType_Args) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *GetSchemaType_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetSchemaType_Args) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

type GetSchemaType_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaTypeList []*KclType `protobuf:"bytes,1,rep,name=schema_type_list,json=schemaTypeList,proto3" json:"schema_type_list,omitempty"`
}

func (x *GetSchemaType_Result) Reset() {
	*x = GetSchemaType_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSchemaType_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaType_Result) ProtoMessage() {}

func (x *GetSchemaType_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaType_Result.ProtoReflect.Descriptor instead.
func (*GetSchemaType_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetSchemaType_Result) GetSchemaTypeList() []*KclType {
	if x != nil {
		return x.SchemaTypeList
	}
	return nil
}

type ValidateCode_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Schema        string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	AttributeName string `protobuf:"bytes,4,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	Format        string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *ValidateCode_Args) Reset() {
	*x = ValidateCode_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCode_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCode_Args) ProtoMessage() {}

func (x *ValidateCode_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCode_Args.ProtoReflect.Descriptor instead.
func (*ValidateCode_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{33}
}

func (x *ValidateCode_Args) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ValidateCode_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidateCode_Args) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ValidateCode_Args) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *ValidateCode_Args) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type ValidateCode_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *ValidateCode_Result) Reset() {
	*x = ValidateCode_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCode_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCode_Result) ProtoMessage() {}

func (x *ValidateCode_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCode_Result.ProtoReflect.Descriptor instead.
func (*ValidateCode_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{34}
}

func (x *ValidateCode_Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidateCode_Result) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

type CodeSnippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema string `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Rule   string `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *CodeSnippet) Reset() {
	*x = CodeSnippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeSnippet) ProtoMessage() {}

func (x *CodeSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeSnippet.ProtoReflect.Descriptor instead.
func (*CodeSnippet) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{35}
}

func (x *CodeSnippet) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *CodeSnippet) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type SpliceCode_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeSnippets []*CodeSnippet `protobuf:"bytes,1,rep,name=codeSnippets,proto3" json:"codeSnippets,omitempty"`
}

func (x *SpliceCode_Args) Reset() {
	*x = SpliceCode_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpliceCode_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpliceCode_Args) ProtoMessage() {}

func (x *SpliceCode_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpliceCode_Args.ProtoReflect.Descriptor instead.
func (*SpliceCode_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{36}
}

func (x *SpliceCode_Args) GetCodeSnippets() []*CodeSnippet {
	if x != nil {
		return x.CodeSnippets
	}
	return nil
}

type SpliceCode_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpliceCode string `protobuf:"bytes,1,opt,name=spliceCode,proto3" json:"spliceCode,omitempty"`
}

func (x *SpliceCode_Result) Reset() {
	*x = SpliceCode_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpliceCode_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpliceCode_Result) ProtoMessage() {}

func (x *SpliceCode_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpliceCode_Result.ProtoReflect.Descriptor instead.
func (*SpliceCode_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{37}
}

func (x *SpliceCode_Result) GetSpliceCode() string {
	if x != nil {
		return x.SpliceCode
	}
	return ""
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line     int64  `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Column   int64  `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{38}
}

func (x *Position) GetLine() int64 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Position) GetColumn() int64 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *Position) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type Complete_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos  *Position `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Complete_Args) Reset() {
	*x = Complete_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complete_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complete_Args) ProtoMessage() {}

func (x *Complete_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complete_Args.ProtoReflect.Descriptor instead.
func (*Complete_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{39}
}

func (x *Complete_Args) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Complete_Args) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Complete_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Complete_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompleteItems string `protobuf:"bytes,1,opt,name=completeItems,proto3" json:"completeItems,omitempty"`
}

func (x *Complete_Result) Reset() {
	*x = Complete_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complete_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complete_Result) ProtoMessage() {}

func (x *Complete_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complete_Result.ProtoReflect.Descriptor instead.
func (*Complete_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{40}
}

func (x *Complete_Result) GetCompleteItems() string {
	if x != nil {
		return x.CompleteItems
	}
	return ""
}

type GoToDef_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos  *Position `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Code string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GoToDef_Args) Reset() {
	*x = GoToDef_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoToDef_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoToDef_Args) ProtoMessage() {}

func (x *GoToDef_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoToDef_Args.ProtoReflect.Descriptor instead.
func (*GoToDef_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{41}
}

func (x *GoToDef_Args) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *GoToDef_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GoToDef_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations string `protobuf:"bytes,1,opt,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GoToDef_Result) Reset() {
	*x = GoToDef_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoToDef_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoToDef_Result) ProtoMessage() {}

func (x *GoToDef_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoToDef_Result.ProtoReflect.Descriptor instead.
func (*GoToDef_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{42}
}

func (x *GoToDef_Result) GetLocations() string {
	if x != nil {
		return x.Locations
	}
	return ""
}

type DocumentSymbol_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *DocumentSymbol_Args) Reset() {
	*x = DocumentSymbol_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentSymbol_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentSymbol_Args) ProtoMessage() {}

func (x *DocumentSymbol_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentSymbol_Args.ProtoReflect.Descriptor instead.
func (*DocumentSymbol_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{43}
}

func (x *DocumentSymbol_Args) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *DocumentSymbol_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type DocumentSymbol_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *DocumentSymbol_Result) Reset() {
	*x = DocumentSymbol_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentSymbol_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentSymbol_Result) ProtoMessage() {}

func (x *DocumentSymbol_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentSymbol_Result.ProtoReflect.Descriptor instead.
func (*DocumentSymbol_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{44}
}

func (x *DocumentSymbol_Result) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type Hover_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos  *Position `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Code string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Hover_Args) Reset() {
	*x = Hover_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hover_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hover_Args) ProtoMessage() {}

func (x *Hover_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hover_Args.ProtoReflect.Descriptor instead.
func (*Hover_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{45}
}

func (x *Hover_Args) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Hover_Args) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Hover_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HoverResult string `protobuf:"bytes,1,opt,name=hoverResult,proto3" json:"hoverResult,omitempty"`
}

func (x *Hover_Result) Reset() {
	*x = Hover_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hover_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hover_Result) ProtoMessage() {}

func (x *Hover_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hover_Result.ProtoReflect.Descriptor instead.
func (*Hover_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{46}
}

func (x *Hover_Result) GetHoverResult() string {
	if x != nil {
		return x.HoverResult
	}
	return ""
}

type ListDepFiles_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkDir       string `protobuf:"bytes,1,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	UseAbsPath    bool   `protobuf:"varint,2,opt,name=use_abs_path,json=useAbsPath,proto3" json:"use_abs_path,omitempty"`
	IncludeAll    bool   `protobuf:"varint,3,opt,name=include_all,json=includeAll,proto3" json:"include_all,omitempty"`
	UseFastParser bool   `protobuf:"varint,4,opt,name=use_fast_parser,json=useFastParser,proto3" json:"use_fast_parser,omitempty"`
}

func (x *ListDepFiles_Args) Reset() {
	*x = ListDepFiles_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepFiles_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepFiles_Args) ProtoMessage() {}

func (x *ListDepFiles_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepFiles_Args.ProtoReflect.Descriptor instead.
func (*ListDepFiles_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{47}
}

func (x *ListDepFiles_Args) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *ListDepFiles_Args) GetUseAbsPath() bool {
	if x != nil {
		return x.UseAbsPath
	}
	return false
}

func (x *ListDepFiles_Args) GetIncludeAll() bool {
	if x != nil {
		return x.IncludeAll
	}
	return false
}

func (x *ListDepFiles_Args) GetUseFastParser() bool {
	if x != nil {
		return x.UseFastParser
	}
	return false
}

type ListDepFiles_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkgroot string   `protobuf:"bytes,1,opt,name=pkgroot,proto3" json:"pkgroot,omitempty"`
	Pkgpath string   `protobuf:"bytes,2,opt,name=pkgpath,proto3" json:"pkgpath,omitempty"`
	Files   []string `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ListDepFiles_Result) Reset() {
	*x = ListDepFiles_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepFiles_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepFiles_Result) ProtoMessage() {}

func (x *ListDepFiles_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepFiles_Result.ProtoReflect.Descriptor instead.
func (*ListDepFiles_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{48}
}

func (x *ListDepFiles_Result) GetPkgroot() string {
	if x != nil {
		return x.Pkgroot
	}
	return ""
}

func (x *ListDepFiles_Result) GetPkgpath() string {
	if x != nil {
		return x.Pkgpath
	}
	return ""
}

func (x *ListDepFiles_Result) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type LoadSettingsFiles_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkDir string   `protobuf:"bytes,1,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	Files   []string `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *LoadSettingsFiles_Args) Reset() {
	*x = LoadSettingsFiles_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSettingsFiles_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSettingsFiles_Args) ProtoMessage() {}

func (x *LoadSettingsFiles_Args) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSettingsFiles_Args.ProtoReflect.Descriptor instead.
func (*LoadSettingsFiles_Args) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{49}
}

func (x *LoadSettingsFiles_Args) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *LoadSettingsFiles_Args) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type LoadSettingsFiles_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KclCliConfigs *CliConfig      `protobuf:"bytes,1,opt,name=kcl_cli_configs,json=kclCliConfigs,proto3" json:"kcl_cli_configs,omitempty"`
	KclOptions    []*KeyValuePair `protobuf:"bytes,2,rep,name=kcl_options,json=kclOptions,proto3" json:"kcl_options,omitempty"`
}

func (x *LoadSettingsFiles_Result) Reset() {
	*x = LoadSettingsFiles_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSettingsFiles_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSettingsFiles_Result) ProtoMessage() {}

func (x *LoadSettingsFiles_Result) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSettingsFiles_Result.ProtoReflect.Descriptor instead.
func (*LoadSettingsFiles_Result) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{50}
}

func (x *LoadSettingsFiles_Result) GetKclCliConfigs() *CliConfig {
	if x != nil {
		return x.KclCliConfigs
	}
	return nil
}

func (x *LoadSettingsFiles_Result) GetKclOptions() []*KeyValuePair {
	if x != nil {
		return x.KclOptions
	}
	return nil
}

type CliConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files            []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Output           string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Overrides        []string `protobuf:"bytes,3,rep,name=overrides,proto3" json:"overrides,omitempty"`
	PathSelector     []string `protobuf:"bytes,4,rep,name=path_selector,json=pathSelector,proto3" json:"path_selector,omitempty"`
	StrictRangeCheck bool     `protobuf:"varint,5,opt,name=strict_range_check,json=strictRangeCheck,proto3" json:"strict_range_check,omitempty"`
	DisableNone      bool     `protobuf:"varint,6,opt,name=disable_none,json=disableNone,proto3" json:"disable_none,omitempty"`
	Verbose          int64    `protobuf:"varint,7,opt,name=verbose,proto3" json:"verbose,omitempty"`
	Debug            bool     `protobuf:"varint,8,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *CliConfig) Reset() {
	*x = CliConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliConfig) ProtoMessage() {}

func (x *CliConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliConfig.ProtoReflect.Descriptor instead.
func (*CliConfig) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{51}
}

func (x *CliConfig) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CliConfig) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *CliConfig) GetOverrides() []string {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *CliConfig) GetPathSelector() []string {
	if x != nil {
		return x.PathSelector
	}
	return nil
}

func (x *CliConfig) GetStrictRangeCheck() bool {
	if x != nil {
		return x.StrictRangeCheck
	}
	return false
}

func (x *CliConfig) GetDisableNone() bool {
	if x != nil {
		return x.DisableNone
	}
	return false
}

func (x *CliConfig) GetVerbose() int64 {
	if x != nil {
		return x.Verbose
	}
	return 0
}

func (x *CliConfig) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{52}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type KclType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                                                                                     // schema, dict, list, str, int, float, bool, null, type_string
	UnionTypes []*KclType          `protobuf:"bytes,2,rep,name=union_types,json=unionTypes,proto3" json:"union_types,omitempty"`                                                                       // union types
	Default    string              `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`                                                                                               // default value
	SchemaName string              `protobuf:"bytes,4,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`                                                                       // schema name
	SchemaDoc  string              `protobuf:"bytes,5,opt,name=schema_doc,json=schemaDoc,proto3" json:"schema_doc,omitempty"`                                                                          // schema doc
	Properties map[string]*KclType `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // schema properties
	Required   []string            `protobuf:"bytes,7,rep,name=required,proto3" json:"required,omitempty"`                                                                                             // required schema properties, [property_name1, property_name2]
	Key        *KclType            `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`                                                                                                       // dict key type
	Item       *KclType            `protobuf:"bytes,9,opt,name=item,proto3" json:"item,omitempty"`                                                                                                     // dict/list item type
	Line       int32               `protobuf:"varint,10,opt,name=line,proto3" json:"line,omitempty"`
	Decorators []*Decorator        `protobuf:"bytes,11,rep,name=decorators,proto3" json:"decorators,omitempty"` // schema decorators
}

func (x *KclType) Reset() {
	*x = KclType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KclType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KclType) ProtoMessage() {}

func (x *KclType) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KclType.ProtoReflect.Descriptor instead.
func (*KclType) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{53}
}

func (x *KclType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *KclType) GetUnionTypes() []*KclType {
	if x != nil {
		return x.UnionTypes
	}
	return nil
}

func (x *KclType) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *KclType) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *KclType) GetSchemaDoc() string {
	if x != nil {
		return x.SchemaDoc
	}
	return ""
}

func (x *KclType) GetProperties() map[string]*KclType {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *KclType) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

func (x *KclType) GetKey() *KclType {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KclType) GetItem() *KclType {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *KclType) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *KclType) GetDecorators() []*Decorator {
	if x != nil {
		return x.Decorators
	}
	return nil
}

type Decorator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments []string          `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Keywords  map[string]string `protobuf:"bytes,3,rep,name=keywords,proto3" json:"keywords,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Decorator) Reset() {
	*x = Decorator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpyrpc_gpyrpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decorator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decorator) ProtoMessage() {}

func (x *Decorator) ProtoReflect() protoreflect.Message {
	mi := &file_gpyrpc_gpyrpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decorator.ProtoReflect.Descriptor instead.
func (*Decorator) Descriptor() ([]byte, []int) {
	return file_gpyrpc_gpyrpc_proto_rawDescGZIP(), []int{54}
}

func (x *Decorator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Decorator) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *Decorator) GetKeywords() map[string]string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

var File_gpyrpc_gpyrpc_proto protoreflect.FileDescriptor

var file_gpyrpc_gpyrpc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0a, 0x43, 0x6d,
	0x64, 0x41, 0x72, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x43, 0x6d, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6b, 0x67, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x67, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x07,
	0x6b, 0x63, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x63, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x06, 0x6b, 0x63, 0x6c, 0x45, 0x72, 0x72, 0x22, 0x7f, 0x0a, 0x08, 0x4b, 0x63, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x77, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x77, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x35, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e,
	0x4b, 0x63, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x4b, 0x63, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x67, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x67, 0x4d, 0x73, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x72, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x72, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x4e, 0x6f, 0x22, 0x21, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x5f, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x50, 0x69, 0x6e,
	0x67, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x11,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x41, 0x72, 0x67,
	0x73, 0x22, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x80, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x4c,
	0x61, 0x72, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x22, 0x41, 0x0a, 0x19, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x5f, 0x4c, 0x61, 0x72, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x72, 0x6b, 0x54, 0x72,
	0x65, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x5f, 0x41, 0x53, 0x54, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x14, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x41, 0x53, 0x54, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x15,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x41, 0x53, 0x54,
	0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6b, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x6b, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x34, 0x0a,
	0x17, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x41, 0x53,
	0x54, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x74, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x74, 0x4a,
	0x73, 0x6f, 0x6e, 0x22, 0x89, 0x04, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b,
	0x44, 0x69, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6b, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6b,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x70, 0x79, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6d, 0x64, 0x41, 0x72, 0x67, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6d, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x41, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0x79, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x79, 0x61, 0x6d,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x31, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x74, 0x65, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x11, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x74, 0x68, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x22, 0x23, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x5f,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2b, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x11, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x0d, 0x45, 0x76, 0x61, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x0f, 0x45,
	0x76, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x26, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39,
	0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70,
	0x63, 0x2e, 0x4b, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x50,
	0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x4a, 0x0a, 0x0f, 0x53,
	0x70, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x37,
	0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x70, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x5b, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x22, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x0c, 0x47, 0x6f, 0x54, 0x6f, 0x44, 0x65,
	0x66, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e,
	0x0a, 0x0e, 0x47, 0x6f, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3d,
	0x0a, 0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a,
	0x15, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x44,
	0x0a, 0x0a, 0x48, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x70, 0x79, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x48, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x61,
	0x62, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x41, 0x62, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x46, 0x61, 0x73, 0x74, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x22, 0x5f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6b, 0x67,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x67, 0x72,
	0x6f, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6b, 0x67, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x67, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x16, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x8c,
	0x01, 0x0a, 0x18, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x6b,
	0x63, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6b, 0x63, 0x6c, 0x43, 0x6c, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x6b, 0x63, 0x6c, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x70,
	0x79, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x0a, 0x6b, 0x63, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfd, 0x01,
	0x0a, 0x09, 0x43, 0x6c, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x68, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x74, 0x68, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22, 0x36, 0x0a,
	0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe5, 0x03, 0x0a, 0x07, 0x4b, 0x63, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x2e, 0x4b, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x64, 0x6f, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x6f,
	0x63, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4b,
	0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x70,
	0x79, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x65,
	0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x4e, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x63, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb7, 0x01,
	0x0a, 0x09, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x82, 0x01, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c,
	0x74, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x11, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x17, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xb4, 0x0b, 0x0a,
	0x0c, 0x4b, 0x63, 0x6c, 0x76, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a,
	0x12, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x4c, 0x61, 0x72, 0x6b, 0x54,
	0x72, 0x65, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x4c, 0x61, 0x72, 0x6b, 0x54, 0x72, 0x65, 0x65, 0x5f,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x21, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x4c, 0x61, 0x72, 0x6b, 0x54, 0x72, 0x65, 0x65,
	0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x5f, 0x41, 0x53, 0x54, 0x12, 0x1a, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x41, 0x53, 0x54, 0x5f,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x1c, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x41, 0x53, 0x54, 0x5f, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x41, 0x53, 0x54, 0x12, 0x1d, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x41, 0x53, 0x54,
	0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1f, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x41, 0x53, 0x54, 0x5f,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x1a, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x40, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x17, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72,
	0x70, 0x63, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x74, 0x68, 0x5f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x15, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x46, 0x0a, 0x0c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1b, 0x2e, 0x67, 0x70,
	0x79, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x45, 0x76, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e, 0x67, 0x70,
	0x79, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e,
	0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1c, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x1b, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0a,
	0x53, 0x70, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x6c,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a,
	0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x17, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x47, 0x6f,
	0x54, 0x6f, 0x44, 0x65, 0x66, 0x12, 0x14, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x6f, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x70,
	0x79, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x6f, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x5f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1b, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x1d, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x31, 0x0a, 0x05, 0x48, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x14,
	0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x1b, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x11,
	0x4c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x1e, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x20, 0x2e, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x2d, 0x69, 0x6e, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x74,
	0x2d, 0x63, 0x61, 0x73, 0x2f, 0x4b, 0x43, 0x4c, 0x56, 0x4d, 0x2f, 0x6b, 0x63, 0x6c, 0x76, 0x6d,
	0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x67, 0x70, 0x79,
	0x72, 0x70, 0x63, 0x3b, 0x67, 0x70, 0x79, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_gpyrpc_gpyrpc_proto_rawDescOnce sync.Once
	file_gpyrpc_gpyrpc_proto_rawDescData = file_gpyrpc_gpyrpc_proto_rawDesc
)

func file_gpyrpc_gpyrpc_proto_rawDescGZIP() []byte {
	file_gpyrpc_gpyrpc_proto_rawDescOnce.Do(func() {
		file_gpyrpc_gpyrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_gpyrpc_gpyrpc_proto_rawDescData)
	})
	return file_gpyrpc_gpyrpc_proto_rawDescData
}

var file_gpyrpc_gpyrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_gpyrpc_gpyrpc_proto_goTypes = []interface{}{
	(*CmdArgSpec)(nil),                // 0: gpyrpc.CmdArgSpec
	(*CmdOverrideSpec)(nil),           // 1: gpyrpc.CmdOverrideSpec
	(*RestResponse)(nil),              // 2: gpyrpc.RestResponse
	(*KclError)(nil),                  // 3: gpyrpc.KclError
	(*KclErrorInfo)(nil),              // 4: gpyrpc.KclErrorInfo
	(*Ping_Args)(nil),                 // 5: gpyrpc.Ping_Args
	(*Ping_Result)(nil),               // 6: gpyrpc.Ping_Result
	(*ListMethod_Args)(nil),           // 7: gpyrpc.ListMethod_Args
	(*ListMethod_Result)(nil),         // 8: gpyrpc.ListMethod_Result
	(*ParseFile_LarkTree_Args)(nil),   // 9: gpyrpc.ParseFile_LarkTree_Args
	(*ParseFile_LarkTree_Result)(nil), // 10: gpyrpc.ParseFile_LarkTree_Result
	(*ParseFile_AST_Args)(nil),        // 11: gpyrpc.ParseFile_AST_Args
	(*ParseFile_AST_Result)(nil),      // 12: gpyrpc.ParseFile_AST_Result
	(*ParseProgram_AST_Args)(nil),     // 13: gpyrpc.ParseProgram_AST_Args
	(*ParseProgram_AST_Result)(nil),   // 14: gpyrpc.ParseProgram_AST_Result
	(*ExecProgram_Args)(nil),          // 15: gpyrpc.ExecProgram_Args
	(*ExecProgram_Result)(nil),        // 16: gpyrpc.ExecProgram_Result
	(*ResetPlugin_Args)(nil),          // 17: gpyrpc.ResetPlugin_Args
	(*ResetPlugin_Result)(nil),        // 18: gpyrpc.ResetPlugin_Result
	(*FormatCode_Args)(nil),           // 19: gpyrpc.FormatCode_Args
	(*FormatCode_Result)(nil),         // 20: gpyrpc.FormatCode_Result
	(*FormatPath_Args)(nil),           // 21: gpyrpc.FormatPath_Args
	(*FormatPath_Result)(nil),         // 22: gpyrpc.FormatPath_Result
	(*LintPath_Args)(nil),             // 23: gpyrpc.LintPath_Args
	(*LintPath_Result)(nil),           // 24: gpyrpc.LintPath_Result
	(*OverrideFile_Args)(nil),         // 25: gpyrpc.OverrideFile_Args
	(*OverrideFile_Result)(nil),       // 26: gpyrpc.OverrideFile_Result
	(*EvalCode_Args)(nil),             // 27: gpyrpc.EvalCode_Args
	(*EvalCode_Result)(nil),           // 28: gpyrpc.EvalCode_Result
	(*ResolveCode_Args)(nil),          // 29: gpyrpc.ResolveCode_Args
	(*ResolveCode_Result)(nil),        // 30: gpyrpc.ResolveCode_Result
	(*GetSchemaType_Args)(nil),        // 31: gpyrpc.GetSchemaType_Args
	(*GetSchemaType_Result)(nil),      // 32: gpyrpc.GetSchemaType_Result
	(*ValidateCode_Args)(nil),         // 33: gpyrpc.ValidateCode_Args
	(*ValidateCode_Result)(nil),       // 34: gpyrpc.ValidateCode_Result
	(*CodeSnippet)(nil),               // 35: gpyrpc.CodeSnippet
	(*SpliceCode_Args)(nil),           // 36: gpyrpc.SpliceCode_Args
	(*SpliceCode_Result)(nil),         // 37: gpyrpc.SpliceCode_Result
	(*Position)(nil),                  // 38: gpyrpc.Position
	(*Complete_Args)(nil),             // 39: gpyrpc.Complete_Args
	(*Complete_Result)(nil),           // 40: gpyrpc.Complete_Result
	(*GoToDef_Args)(nil),              // 41: gpyrpc.GoToDef_Args
	(*GoToDef_Result)(nil),            // 42: gpyrpc.GoToDef_Result
	(*DocumentSymbol_Args)(nil),       // 43: gpyrpc.DocumentSymbol_Args
	(*DocumentSymbol_Result)(nil),     // 44: gpyrpc.DocumentSymbol_Result
	(*Hover_Args)(nil),                // 45: gpyrpc.Hover_Args
	(*Hover_Result)(nil),              // 46: gpyrpc.Hover_Result
	(*ListDepFiles_Args)(nil),         // 47: gpyrpc.ListDepFiles_Args
	(*ListDepFiles_Result)(nil),       // 48: gpyrpc.ListDepFiles_Result
	(*LoadSettingsFiles_Args)(nil),    // 49: gpyrpc.LoadSettingsFiles_Args
	(*LoadSettingsFiles_Result)(nil),  // 50: gpyrpc.LoadSettingsFiles_Result
	(*CliConfig)(nil),                 // 51: gpyrpc.CliConfig
	(*KeyValuePair)(nil),              // 52: gpyrpc.KeyValuePair
	(*KclType)(nil),                   // 53: gpyrpc.KclType
	(*Decorator)(nil),                 // 54: gpyrpc.Decorator
	nil,                               // 55: gpyrpc.KclType.PropertiesEntry
	nil,                               // 56: gpyrpc.Decorator.KeywordsEntry
	(*anypb.Any)(nil),                 // 57: google.protobuf.Any
}
var file_gpyrpc_gpyrpc_proto_depIdxs = []int32{
	57, // 0: gpyrpc.RestResponse.result:type_name -> google.protobuf.Any
	3,  // 1: gpyrpc.RestResponse.kcl_err:type_name -> gpyrpc.KclError
	4,  // 2: gpyrpc.KclError.error_infos:type_name -> gpyrpc.KclErrorInfo
	0,  // 3: gpyrpc.ExecProgram_Args.args:type_name -> gpyrpc.CmdArgSpec
	1,  // 4: gpyrpc.ExecProgram_Args.overrides:type_name -> gpyrpc.CmdOverrideSpec
	53, // 5: gpyrpc.GetSchemaType_Result.schema_type_list:type_name -> gpyrpc.KclType
	35, // 6: gpyrpc.SpliceCode_Args.codeSnippets:type_name -> gpyrpc.CodeSnippet
	38, // 7: gpyrpc.Complete_Args.pos:type_name -> gpyrpc.Position
	38, // 8: gpyrpc.GoToDef_Args.pos:type_name -> gpyrpc.Position
	38, // 9: gpyrpc.Hover_Args.pos:type_name -> gpyrpc.Position
	51, // 10: gpyrpc.LoadSettingsFiles_Result.kcl_cli_configs:type_name -> gpyrpc.CliConfig
	52, // 11: gpyrpc.LoadSettingsFiles_Result.kcl_options:type_name -> gpyrpc.KeyValuePair
	53, // 12: gpyrpc.KclType.union_types:type_name -> gpyrpc.KclType
	55, // 13: gpyrpc.KclType.properties:type_name -> gpyrpc.KclType.PropertiesEntry
	53, // 14: gpyrpc.KclType.key:type_name -> gpyrpc.KclType
	53, // 15: gpyrpc.KclType.item:type_name -> gpyrpc.KclType
	54, // 16: gpyrpc.KclType.decorators:type_name -> gpyrpc.Decorator
	56, // 17: gpyrpc.Decorator.keywords:type_name -> gpyrpc.Decorator.KeywordsEntry
	53, // 18: gpyrpc.KclType.PropertiesEntry.value:type_name -> gpyrpc.KclType
	5,  // 19: gpyrpc.BuiltinService.Ping:input_type -> gpyrpc.Ping_Args
	7,  // 20: gpyrpc.BuiltinService.ListMethod:input_type -> gpyrpc.ListMethod_Args
	5,  // 21: gpyrpc.KclvmService.Ping:input_type -> gpyrpc.Ping_Args
	9,  // 22: gpyrpc.KclvmService.ParseFile_LarkTree:input_type -> gpyrpc.ParseFile_LarkTree_Args
	11, // 23: gpyrpc.KclvmService.ParseFile_AST:input_type -> gpyrpc.ParseFile_AST_Args
	13, // 24: gpyrpc.KclvmService.ParseProgram_AST:input_type -> gpyrpc.ParseProgram_AST_Args
	15, // 25: gpyrpc.KclvmService.ExecProgram:input_type -> gpyrpc.ExecProgram_Args
	17, // 26: gpyrpc.KclvmService.ResetPlugin:input_type -> gpyrpc.ResetPlugin_Args
	19, // 27: gpyrpc.KclvmService.FormatCode:input_type -> gpyrpc.FormatCode_Args
	21, // 28: gpyrpc.KclvmService.FormatPath:input_type -> gpyrpc.FormatPath_Args
	23, // 29: gpyrpc.KclvmService.LintPath:input_type -> gpyrpc.LintPath_Args
	25, // 30: gpyrpc.KclvmService.OverrideFile:input_type -> gpyrpc.OverrideFile_Args
	27, // 31: gpyrpc.KclvmService.EvalCode:input_type -> gpyrpc.EvalCode_Args
	29, // 32: gpyrpc.KclvmService.ResolveCode:input_type -> gpyrpc.ResolveCode_Args
	31, // 33: gpyrpc.KclvmService.GetSchemaType:input_type -> gpyrpc.GetSchemaType_Args
	33, // 34: gpyrpc.KclvmService.ValidateCode:input_type -> gpyrpc.ValidateCode_Args
	36, // 35: gpyrpc.KclvmService.SpliceCode:input_type -> gpyrpc.SpliceCode_Args
	39, // 36: gpyrpc.KclvmService.Complete:input_type -> gpyrpc.Complete_Args
	41, // 37: gpyrpc.KclvmService.GoToDef:input_type -> gpyrpc.GoToDef_Args
	43, // 38: gpyrpc.KclvmService.DocumentSymbol:input_type -> gpyrpc.DocumentSymbol_Args
	45, // 39: gpyrpc.KclvmService.Hover:input_type -> gpyrpc.Hover_Args
	47, // 40: gpyrpc.KclvmService.ListDepFiles:input_type -> gpyrpc.ListDepFiles_Args
	49, // 41: gpyrpc.KclvmService.LoadSettingsFiles:input_type -> gpyrpc.LoadSettingsFiles_Args
	6,  // 42: gpyrpc.BuiltinService.Ping:output_type -> gpyrpc.Ping_Result
	8,  // 43: gpyrpc.BuiltinService.ListMethod:output_type -> gpyrpc.ListMethod_Result
	6,  // 44: gpyrpc.KclvmService.Ping:output_type -> gpyrpc.Ping_Result
	10, // 45: gpyrpc.KclvmService.ParseFile_LarkTree:output_type -> gpyrpc.ParseFile_LarkTree_Result
	12, // 46: gpyrpc.KclvmService.ParseFile_AST:output_type -> gpyrpc.ParseFile_AST_Result
	14, // 47: gpyrpc.KclvmService.ParseProgram_AST:output_type -> gpyrpc.ParseProgram_AST_Result
	16, // 48: gpyrpc.KclvmService.ExecProgram:output_type -> gpyrpc.ExecProgram_Result
	18, // 49: gpyrpc.KclvmService.ResetPlugin:output_type -> gpyrpc.ResetPlugin_Result
	20, // 50: gpyrpc.KclvmService.FormatCode:output_type -> gpyrpc.FormatCode_Result
	22, // 51: gpyrpc.KclvmService.FormatPath:output_type -> gpyrpc.FormatPath_Result
	24, // 52: gpyrpc.KclvmService.LintPath:output_type -> gpyrpc.LintPath_Result
	26, // 53: gpyrpc.KclvmService.OverrideFile:output_type -> gpyrpc.OverrideFile_Result
	28, // 54: gpyrpc.KclvmService.EvalCode:output_type -> gpyrpc.EvalCode_Result
	30, // 55: gpyrpc.KclvmService.ResolveCode:output_type -> gpyrpc.ResolveCode_Result
	32, // 56: gpyrpc.KclvmService.GetSchemaType:output_type -> gpyrpc.GetSchemaType_Result
	34, // 57: gpyrpc.KclvmService.ValidateCode:output_type -> gpyrpc.ValidateCode_Result
	37, // 58: gpyrpc.KclvmService.SpliceCode:output_type -> gpyrpc.SpliceCode_Result
	40, // 59: gpyrpc.KclvmService.Complete:output_type -> gpyrpc.Complete_Result
	42, // 60: gpyrpc.KclvmService.GoToDef:output_type -> gpyrpc.GoToDef_Result
	44, // 61: gpyrpc.KclvmService.DocumentSymbol:output_type -> gpyrpc.DocumentSymbol_Result
	46, // 62: gpyrpc.KclvmService.Hover:output_type -> gpyrpc.Hover_Result
	48, // 63: gpyrpc.KclvmService.ListDepFiles:output_type -> gpyrpc.ListDepFiles_Result
	50, // 64: gpyrpc.KclvmService.LoadSettingsFiles:output_type -> gpyrpc.LoadSettingsFiles_Result
	42, // [42:65] is the sub-list for method output_type
	19, // [19:42] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_gpyrpc_gpyrpc_proto_init() }
func file_gpyrpc_gpyrpc_proto_init() {
	if File_gpyrpc_gpyrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gpyrpc_gpyrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdArgSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdOverrideSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KclError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KclErrorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMethod_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMethod_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFile_LarkTree_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFile_LarkTree_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFile_AST_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFile_AST_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseProgram_AST_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseProgram_AST_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecProgram_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecProgram_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPlugin_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPlugin_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatCode_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatCode_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatPath_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatPath_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LintPath_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LintPath_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideFile_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideFile_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvalCode_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvalCode_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveCode_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveCode_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaType_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSchemaType_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCode_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCode_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeSnippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpliceCode_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpliceCode_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complete_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complete_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoToDef_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoToDef_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentSymbol_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentSymbol_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hover_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hover_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepFiles_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepFiles_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSettingsFiles_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSettingsFiles_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KclType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpyrpc_gpyrpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decorator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gpyrpc_gpyrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_gpyrpc_gpyrpc_proto_goTypes,
		DependencyIndexes: file_gpyrpc_gpyrpc_proto_depIdxs,
		MessageInfos:      file_gpyrpc_gpyrpc_proto_msgTypes,
	}.Build()
	File_gpyrpc_gpyrpc_proto = out.File
	file_gpyrpc_gpyrpc_proto_rawDesc = nil
	file_gpyrpc_gpyrpc_proto_goTypes = nil
	file_gpyrpc_gpyrpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BuiltinServiceClient is the client API for BuiltinService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuiltinServiceClient interface {
	Ping(ctx context.Context, in *Ping_Args, opts ...grpc.CallOption) (*Ping_Result, error)
	ListMethod(ctx context.Context, in *ListMethod_Args, opts ...grpc.CallOption) (*ListMethod_Result, error)
}

type builtinServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBuiltinServiceClient(cc grpc.ClientConnInterface) BuiltinServiceClient {
	return &builtinServiceClient{cc}
}

func (c *builtinServiceClient) Ping(ctx context.Context, in *Ping_Args, opts ...grpc.CallOption) (*Ping_Result, error) {
	out := new(Ping_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.BuiltinService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *builtinServiceClient) ListMethod(ctx context.Context, in *ListMethod_Args, opts ...grpc.CallOption) (*ListMethod_Result, error) {
	out := new(ListMethod_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.BuiltinService/ListMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuiltinServiceServer is the server API for BuiltinService service.
type BuiltinServiceServer interface {
	Ping(context.Context, *Ping_Args) (*Ping_Result, error)
	ListMethod(context.Context, *ListMethod_Args) (*ListMethod_Result, error)
}

// UnimplementedBuiltinServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBuiltinServiceServer struct {
}

func (*UnimplementedBuiltinServiceServer) Ping(context.Context, *Ping_Args) (*Ping_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedBuiltinServiceServer) ListMethod(context.Context, *ListMethod_Args) (*ListMethod_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMethod not implemented")
}

func RegisterBuiltinServiceServer(s *grpc.Server, srv BuiltinServiceServer) {
	s.RegisterService(&_BuiltinService_serviceDesc, srv)
}

func _BuiltinService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuiltinServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.BuiltinService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuiltinServiceServer).Ping(ctx, req.(*Ping_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuiltinService_ListMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMethod_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuiltinServiceServer).ListMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.BuiltinService/ListMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuiltinServiceServer).ListMethod(ctx, req.(*ListMethod_Args))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuiltinService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gpyrpc.BuiltinService",
	HandlerType: (*BuiltinServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _BuiltinService_Ping_Handler,
		},
		{
			MethodName: "ListMethod",
			Handler:    _BuiltinService_ListMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gpyrpc/gpyrpc.proto",
}

// KclvmServiceClient is the client API for KclvmService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KclvmServiceClient interface {
	Ping(ctx context.Context, in *Ping_Args, opts ...grpc.CallOption) (*Ping_Result, error)
	ParseFile_LarkTree(ctx context.Context, in *ParseFile_LarkTree_Args, opts ...grpc.CallOption) (*ParseFile_LarkTree_Result, error)
	ParseFile_AST(ctx context.Context, in *ParseFile_AST_Args, opts ...grpc.CallOption) (*ParseFile_AST_Result, error)
	ParseProgram_AST(ctx context.Context, in *ParseProgram_AST_Args, opts ...grpc.CallOption) (*ParseProgram_AST_Result, error)
	ExecProgram(ctx context.Context, in *ExecProgram_Args, opts ...grpc.CallOption) (*ExecProgram_Result, error)
	ResetPlugin(ctx context.Context, in *ResetPlugin_Args, opts ...grpc.CallOption) (*ResetPlugin_Result, error)
	FormatCode(ctx context.Context, in *FormatCode_Args, opts ...grpc.CallOption) (*FormatCode_Result, error)
	FormatPath(ctx context.Context, in *FormatPath_Args, opts ...grpc.CallOption) (*FormatPath_Result, error)
	LintPath(ctx context.Context, in *LintPath_Args, opts ...grpc.CallOption) (*LintPath_Result, error)
	OverrideFile(ctx context.Context, in *OverrideFile_Args, opts ...grpc.CallOption) (*OverrideFile_Result, error)
	EvalCode(ctx context.Context, in *EvalCode_Args, opts ...grpc.CallOption) (*EvalCode_Result, error)
	ResolveCode(ctx context.Context, in *ResolveCode_Args, opts ...grpc.CallOption) (*ResolveCode_Result, error)
	GetSchemaType(ctx context.Context, in *GetSchemaType_Args, opts ...grpc.CallOption) (*GetSchemaType_Result, error)
	ValidateCode(ctx context.Context, in *ValidateCode_Args, opts ...grpc.CallOption) (*ValidateCode_Result, error)
	SpliceCode(ctx context.Context, in *SpliceCode_Args, opts ...grpc.CallOption) (*SpliceCode_Result, error)
	Complete(ctx context.Context, in *Complete_Args, opts ...grpc.CallOption) (*Complete_Result, error)
	GoToDef(ctx context.Context, in *GoToDef_Args, opts ...grpc.CallOption) (*GoToDef_Result, error)
	DocumentSymbol(ctx context.Context, in *DocumentSymbol_Args, opts ...grpc.CallOption) (*DocumentSymbol_Result, error)
	Hover(ctx context.Context, in *Hover_Args, opts ...grpc.CallOption) (*Hover_Result, error)
	ListDepFiles(ctx context.Context, in *ListDepFiles_Args, opts ...grpc.CallOption) (*ListDepFiles_Result, error)
	LoadSettingsFiles(ctx context.Context, in *LoadSettingsFiles_Args, opts ...grpc.CallOption) (*LoadSettingsFiles_Result, error)
}

type kclvmServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKclvmServiceClient(cc grpc.ClientConnInterface) KclvmServiceClient {
	return &kclvmServiceClient{cc}
}

func (c *kclvmServiceClient) Ping(ctx context.Context, in *Ping_Args, opts ...grpc.CallOption) (*Ping_Result, error) {
	out := new(Ping_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ParseFile_LarkTree(ctx context.Context, in *ParseFile_LarkTree_Args, opts ...grpc.CallOption) (*ParseFile_LarkTree_Result, error) {
	out := new(ParseFile_LarkTree_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ParseFile_LarkTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ParseFile_AST(ctx context.Context, in *ParseFile_AST_Args, opts ...grpc.CallOption) (*ParseFile_AST_Result, error) {
	out := new(ParseFile_AST_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ParseFile_AST", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ParseProgram_AST(ctx context.Context, in *ParseProgram_AST_Args, opts ...grpc.CallOption) (*ParseProgram_AST_Result, error) {
	out := new(ParseProgram_AST_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ParseProgram_AST", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ExecProgram(ctx context.Context, in *ExecProgram_Args, opts ...grpc.CallOption) (*ExecProgram_Result, error) {
	out := new(ExecProgram_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ExecProgram", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ResetPlugin(ctx context.Context, in *ResetPlugin_Args, opts ...grpc.CallOption) (*ResetPlugin_Result, error) {
	out := new(ResetPlugin_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ResetPlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) FormatCode(ctx context.Context, in *FormatCode_Args, opts ...grpc.CallOption) (*FormatCode_Result, error) {
	out := new(FormatCode_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/FormatCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) FormatPath(ctx context.Context, in *FormatPath_Args, opts ...grpc.CallOption) (*FormatPath_Result, error) {
	out := new(FormatPath_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/FormatPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) LintPath(ctx context.Context, in *LintPath_Args, opts ...grpc.CallOption) (*LintPath_Result, error) {
	out := new(LintPath_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/LintPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) OverrideFile(ctx context.Context, in *OverrideFile_Args, opts ...grpc.CallOption) (*OverrideFile_Result, error) {
	out := new(OverrideFile_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/OverrideFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) EvalCode(ctx context.Context, in *EvalCode_Args, opts ...grpc.CallOption) (*EvalCode_Result, error) {
	out := new(EvalCode_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/EvalCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ResolveCode(ctx context.Context, in *ResolveCode_Args, opts ...grpc.CallOption) (*ResolveCode_Result, error) {
	out := new(ResolveCode_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ResolveCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) GetSchemaType(ctx context.Context, in *GetSchemaType_Args, opts ...grpc.CallOption) (*GetSchemaType_Result, error) {
	out := new(GetSchemaType_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/GetSchemaType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ValidateCode(ctx context.Context, in *ValidateCode_Args, opts ...grpc.CallOption) (*ValidateCode_Result, error) {
	out := new(ValidateCode_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ValidateCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) SpliceCode(ctx context.Context, in *SpliceCode_Args, opts ...grpc.CallOption) (*SpliceCode_Result, error) {
	out := new(SpliceCode_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/SpliceCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) Complete(ctx context.Context, in *Complete_Args, opts ...grpc.CallOption) (*Complete_Result, error) {
	out := new(Complete_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/Complete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) GoToDef(ctx context.Context, in *GoToDef_Args, opts ...grpc.CallOption) (*GoToDef_Result, error) {
	out := new(GoToDef_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/GoToDef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) DocumentSymbol(ctx context.Context, in *DocumentSymbol_Args, opts ...grpc.CallOption) (*DocumentSymbol_Result, error) {
	out := new(DocumentSymbol_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/DocumentSymbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) Hover(ctx context.Context, in *Hover_Args, opts ...grpc.CallOption) (*Hover_Result, error) {
	out := new(Hover_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/Hover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) ListDepFiles(ctx context.Context, in *ListDepFiles_Args, opts ...grpc.CallOption) (*ListDepFiles_Result, error) {
	out := new(ListDepFiles_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/ListDepFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kclvmServiceClient) LoadSettingsFiles(ctx context.Context, in *LoadSettingsFiles_Args, opts ...grpc.CallOption) (*LoadSettingsFiles_Result, error) {
	out := new(LoadSettingsFiles_Result)
	err := c.cc.Invoke(ctx, "/gpyrpc.KclvmService/LoadSettingsFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KclvmServiceServer is the server API for KclvmService service.
type KclvmServiceServer interface {
	Ping(context.Context, *Ping_Args) (*Ping_Result, error)
	ParseFile_LarkTree(context.Context, *ParseFile_LarkTree_Args) (*ParseFile_LarkTree_Result, error)
	ParseFile_AST(context.Context, *ParseFile_AST_Args) (*ParseFile_AST_Result, error)
	ParseProgram_AST(context.Context, *ParseProgram_AST_Args) (*ParseProgram_AST_Result, error)
	ExecProgram(context.Context, *ExecProgram_Args) (*ExecProgram_Result, error)
	ResetPlugin(context.Context, *ResetPlugin_Args) (*ResetPlugin_Result, error)
	FormatCode(context.Context, *FormatCode_Args) (*FormatCode_Result, error)
	FormatPath(context.Context, *FormatPath_Args) (*FormatPath_Result, error)
	LintPath(context.Context, *LintPath_Args) (*LintPath_Result, error)
	OverrideFile(context.Context, *OverrideFile_Args) (*OverrideFile_Result, error)
	EvalCode(context.Context, *EvalCode_Args) (*EvalCode_Result, error)
	ResolveCode(context.Context, *ResolveCode_Args) (*ResolveCode_Result, error)
	GetSchemaType(context.Context, *GetSchemaType_Args) (*GetSchemaType_Result, error)
	ValidateCode(context.Context, *ValidateCode_Args) (*ValidateCode_Result, error)
	SpliceCode(context.Context, *SpliceCode_Args) (*SpliceCode_Result, error)
	Complete(context.Context, *Complete_Args) (*Complete_Result, error)
	GoToDef(context.Context, *GoToDef_Args) (*GoToDef_Result, error)
	DocumentSymbol(context.Context, *DocumentSymbol_Args) (*DocumentSymbol_Result, error)
	Hover(context.Context, *Hover_Args) (*Hover_Result, error)
	ListDepFiles(context.Context, *ListDepFiles_Args) (*ListDepFiles_Result, error)
	LoadSettingsFiles(context.Context, *LoadSettingsFiles_Args) (*LoadSettingsFiles_Result, error)
}

// UnimplementedKclvmServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKclvmServiceServer struct {
}

func (*UnimplementedKclvmServiceServer) Ping(context.Context, *Ping_Args) (*Ping_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedKclvmServiceServer) ParseFile_LarkTree(context.Context, *ParseFile_LarkTree_Args) (*ParseFile_LarkTree_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseFile_LarkTree not implemented")
}
func (*UnimplementedKclvmServiceServer) ParseFile_AST(context.Context, *ParseFile_AST_Args) (*ParseFile_AST_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseFile_AST not implemented")
}
func (*UnimplementedKclvmServiceServer) ParseProgram_AST(context.Context, *ParseProgram_AST_Args) (*ParseProgram_AST_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseProgram_AST not implemented")
}
func (*UnimplementedKclvmServiceServer) ExecProgram(context.Context, *ExecProgram_Args) (*ExecProgram_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecProgram not implemented")
}
func (*UnimplementedKclvmServiceServer) ResetPlugin(context.Context, *ResetPlugin_Args) (*ResetPlugin_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPlugin not implemented")
}
func (*UnimplementedKclvmServiceServer) FormatCode(context.Context, *FormatCode_Args) (*FormatCode_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormatCode not implemented")
}
func (*UnimplementedKclvmServiceServer) FormatPath(context.Context, *FormatPath_Args) (*FormatPath_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormatPath not implemented")
}
func (*UnimplementedKclvmServiceServer) LintPath(context.Context, *LintPath_Args) (*LintPath_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LintPath not implemented")
}
func (*UnimplementedKclvmServiceServer) OverrideFile(context.Context, *OverrideFile_Args) (*OverrideFile_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OverrideFile not implemented")
}
func (*UnimplementedKclvmServiceServer) EvalCode(context.Context, *EvalCode_Args) (*EvalCode_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EvalCode not implemented")
}
func (*UnimplementedKclvmServiceServer) ResolveCode(context.Context, *ResolveCode_Args) (*ResolveCode_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveCode not implemented")
}
func (*UnimplementedKclvmServiceServer) GetSchemaType(context.Context, *GetSchemaType_Args) (*GetSchemaType_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSchemaType not implemented")
}
func (*UnimplementedKclvmServiceServer) ValidateCode(context.Context, *ValidateCode_Args) (*ValidateCode_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCode not implemented")
}
func (*UnimplementedKclvmServiceServer) SpliceCode(context.Context, *SpliceCode_Args) (*SpliceCode_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpliceCode not implemented")
}
func (*UnimplementedKclvmServiceServer) Complete(context.Context, *Complete_Args) (*Complete_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Complete not implemented")
}
func (*UnimplementedKclvmServiceServer) GoToDef(context.Context, *GoToDef_Args) (*GoToDef_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoToDef not implemented")
}
func (*UnimplementedKclvmServiceServer) DocumentSymbol(context.Context, *DocumentSymbol_Args) (*DocumentSymbol_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentSymbol not implemented")
}
func (*UnimplementedKclvmServiceServer) Hover(context.Context, *Hover_Args) (*Hover_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hover not implemented")
}
func (*UnimplementedKclvmServiceServer) ListDepFiles(context.Context, *ListDepFiles_Args) (*ListDepFiles_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDepFiles not implemented")
}
func (*UnimplementedKclvmServiceServer) LoadSettingsFiles(context.Context, *LoadSettingsFiles_Args) (*LoadSettingsFiles_Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadSettingsFiles not implemented")
}

func RegisterKclvmServiceServer(s *grpc.Server, srv KclvmServiceServer) {
	s.RegisterService(&_KclvmService_serviceDesc, srv)
}

func _KclvmService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).Ping(ctx, req.(*Ping_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ParseFile_LarkTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseFile_LarkTree_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ParseFile_LarkTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ParseFile_LarkTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ParseFile_LarkTree(ctx, req.(*ParseFile_LarkTree_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ParseFile_AST_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseFile_AST_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ParseFile_AST(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ParseFile_AST",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ParseFile_AST(ctx, req.(*ParseFile_AST_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ParseProgram_AST_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseProgram_AST_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ParseProgram_AST(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ParseProgram_AST",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ParseProgram_AST(ctx, req.(*ParseProgram_AST_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ExecProgram_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecProgram_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ExecProgram(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ExecProgram",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ExecProgram(ctx, req.(*ExecProgram_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ResetPlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPlugin_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ResetPlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ResetPlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ResetPlugin(ctx, req.(*ResetPlugin_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_FormatCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormatCode_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).FormatCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/FormatCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).FormatCode(ctx, req.(*FormatCode_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_FormatPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormatPath_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).FormatPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/FormatPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).FormatPath(ctx, req.(*FormatPath_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_LintPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LintPath_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).LintPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/LintPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).LintPath(ctx, req.(*LintPath_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_OverrideFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverrideFile_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).OverrideFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/OverrideFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).OverrideFile(ctx, req.(*OverrideFile_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_EvalCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvalCode_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).EvalCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/EvalCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).EvalCode(ctx, req.(*EvalCode_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ResolveCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveCode_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ResolveCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ResolveCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ResolveCode(ctx, req.(*ResolveCode_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_GetSchemaType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSchemaType_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).GetSchemaType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/GetSchemaType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).GetSchemaType(ctx, req.(*GetSchemaType_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ValidateCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateCode_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ValidateCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ValidateCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ValidateCode(ctx, req.(*ValidateCode_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_SpliceCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpliceCode_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).SpliceCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/SpliceCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).SpliceCode(ctx, req.(*SpliceCode_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Complete_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).Complete(ctx, req.(*Complete_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_GoToDef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoToDef_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).GoToDef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/GoToDef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).GoToDef(ctx, req.(*GoToDef_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_DocumentSymbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentSymbol_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).DocumentSymbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/DocumentSymbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).DocumentSymbol(ctx, req.(*DocumentSymbol_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_Hover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Hover_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).Hover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/Hover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).Hover(ctx, req.(*Hover_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_ListDepFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDepFiles_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).ListDepFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/ListDepFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).ListDepFiles(ctx, req.(*ListDepFiles_Args))
	}
	return interceptor(ctx, in, info, handler)
}

func _KclvmService_LoadSettingsFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadSettingsFiles_Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KclvmServiceServer).LoadSettingsFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gpyrpc.KclvmService/LoadSettingsFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KclvmServiceServer).LoadSettingsFiles(ctx, req.(*LoadSettingsFiles_Args))
	}
	return interceptor(ctx, in, info, handler)
}

var _KclvmService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gpyrpc.KclvmService",
	HandlerType: (*KclvmServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _KclvmService_Ping_Handler,
		},
		{
			MethodName: "ParseFile_LarkTree",
			Handler:    _KclvmService_ParseFile_LarkTree_Handler,
		},
		{
			MethodName: "ParseFile_AST",
			Handler:    _KclvmService_ParseFile_AST_Handler,
		},
		{
			MethodName: "ParseProgram_AST",
			Handler:    _KclvmService_ParseProgram_AST_Handler,
		},
		{
			MethodName: "ExecProgram",
			Handler:    _KclvmService_ExecProgram_Handler,
		},
		{
			MethodName: "ResetPlugin",
			Handler:    _KclvmService_ResetPlugin_Handler,
		},
		{
			MethodName: "FormatCode",
			Handler:    _KclvmService_FormatCode_Handler,
		},
		{
			MethodName: "FormatPath",
			Handler:    _KclvmService_FormatPath_Handler,
		},
		{
			MethodName: "LintPath",
			Handler:    _KclvmService_LintPath_Handler,
		},
		{
			MethodName: "OverrideFile",
			Handler:    _KclvmService_OverrideFile_Handler,
		},
		{
			MethodName: "EvalCode",
			Handler:    _KclvmService_EvalCode_Handler,
		},
		{
			MethodName: "ResolveCode",
			Handler:    _KclvmService_ResolveCode_Handler,
		},
		{
			MethodName: "GetSchemaType",
			Handler:    _KclvmService_GetSchemaType_Handler,
		},
		{
			MethodName: "ValidateCode",
			Handler:    _KclvmService_ValidateCode_Handler,
		},
		{
			MethodName: "SpliceCode",
			Handler:    _KclvmService_SpliceCode_Handler,
		},
		{
			MethodName: "Complete",
			Handler:    _KclvmService_Complete_Handler,
		},
		{
			MethodName: "GoToDef",
			Handler:    _KclvmService_GoToDef_Handler,
		},
		{
			MethodName: "DocumentSymbol",
			Handler:    _KclvmService_DocumentSymbol_Handler,
		},
		{
			MethodName: "Hover",
			Handler:    _KclvmService_Hover_Handler,
		},
		{
			MethodName: "ListDepFiles",
			Handler:    _KclvmService_ListDepFiles_Handler,
		},
		{
			MethodName: "LoadSettingsFiles",
			Handler:    _KclvmService_LoadSettingsFiles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gpyrpc/gpyrpc.proto",
}
